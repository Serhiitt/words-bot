import asyncio
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from dotenv import load_dotenv
import database

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å–ª–æ–≤–∞
@dp.message(Command("add"))
async def add_word(message: Message):
    word = message.text.split(maxsplit=1)[1] if len(message.text.split()) > 1 else None
    if not word:
        return await message.reply("‚ö† –í–≤–µ–¥–∏ —Å–ª–æ–≤–æ –ø—ñ—Å–ª—è `/add —Å–ª–æ–≤–æ`")
    
    await database.add_word(word)
    await message.reply(f"‚úÖ –°–ª–æ–≤–æ `{word}` –¥–æ–¥–∞–Ω–æ!")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Å–ª—ñ–≤
@dp.message(Command("list"))
async def list_words(message: Message):
    words = await database.get_words()
    if words:
        await message.reply("üìú –°–ø–∏—Å–æ–∫ —Å–ª—ñ–≤:\n" + "\n".join(words))
    else:
        await message.reply("üì≠ –£ –±–∞–∑—ñ –Ω–µ–º–∞—î —Å–ª—ñ–≤!")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Å–ª–æ–≤–∞
@dp.message(Command("delete"))
async def delete_word(message: Message):
    word = message.text.split(maxsplit=1)[1] if len(message.text.split()) > 1 else None
    if not word:
        return await message.reply("‚ö† –í–≤–µ–¥–∏ —Å–ª–æ–≤–æ –ø—ñ—Å–ª—è `/delete —Å–ª–æ–≤–æ`")

    result = await database.delete_word(word)
    if result == "DELETE 1":
        await message.reply(f"üóë –°–ª–æ–≤–æ `{word}` –≤–∏–¥–∞–ª–µ–Ω–æ!")
    else:
        await message.reply(f"‚ö† –°–ª–æ–≤–æ `{word}` –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –±–∞–∑–∏
@dp.message(Command("clear"))
async def clear_db(message: Message):
    await database.clear_words()
    await message.reply("üßπ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –æ—á–∏—â–µ–Ω–∞!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await database.init_db()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

